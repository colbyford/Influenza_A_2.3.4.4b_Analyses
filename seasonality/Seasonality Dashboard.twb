<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='case_decomp_df_long' inline='true' name='federated.1bisj3y0l3i5z018vndb20x1g5t2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='case_decomp_df_long' name='textscan.1fhaw6q00vyu2q12ofc8q0unnnoi'>
            <connection class='textscan' directory='C:/Users/Colby/Documents/GitHub/Influenza_A_2.3.4.4b_Analyses/seasonality' filename='case_decomp_df_long.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1fhaw6q00vyu2q12ofc8q0unnnoi' name='case_decomp_df_long.csv' table='[case_decomp_df_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='collection_date' ordinal='0' />
            <column datatype='string' name='set' ordinal='1' />
            <column datatype='real' name='resid' ordinal='2' />
            <column datatype='real' name='seasonal' ordinal='3' />
            <column datatype='real' name='trend' ordinal='4' />
            <column datatype='real' name='weights' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1fhaw6q00vyu2q12ofc8q0unnnoi' name='case_decomp_df_long.csv' table='[case_decomp_df_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='collection_date' ordinal='0' />
            <column datatype='string' name='set' ordinal='1' />
            <column datatype='real' name='resid' ordinal='2' />
            <column datatype='real' name='seasonal' ordinal='3' />
            <column datatype='real' name='trend' ordinal='4' />
            <column datatype='real' name='weights' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>collection_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[collection_date]</local-name>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias>collection_date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>set</remote-name>
            <remote-type>129</remote-type>
            <local-name>[set]</local-name>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias>set</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resid]</local-name>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias>resid</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seasonal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[seasonal]</local-name>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias>seasonal</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trend</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trend]</local-name>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias>trend</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weights]</local-name>
            <parent-name>[case_decomp_df_long.csv]</parent-name>
            <remote-alias>weights</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Species' datatype='string' name='[Calculation_5383771926535204866]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [set]&#13;&#10;    WHEN &quot;avian_na&quot; THEN &quot;Avian&quot;&#13;&#10;    WHEN &quot;avian_usa&quot; THEN &quot;Avian&quot;&#13;&#10;    WHEN &quot;mammal_na&quot; THEN &quot;Mammalian&quot;&#13;&#10;    WHEN &quot;mammal_usa&quot; THEN &quot;Mammalian&quot;&#13;&#10;    WHEN &quot;total&quot; THEN &quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Location' datatype='string' name='[Species (copy)_5383771926536011779]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [set]&#13;&#10;    WHEN &quot;avian_na&quot; THEN &quot;North America (w/o USA)&quot;&#13;&#10;    WHEN &quot;avian_usa&quot; THEN &quot;USA&quot;&#13;&#10;    WHEN &quot;mammal_na&quot; THEN &quot;North America (w/o USA)&quot;&#13;&#10;    WHEN &quot;mammal_usa&quot; THEN &quot;USA&quot;&#13;&#10;    WHEN &quot;total&quot; THEN &quot;Total&quot;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='case_decomp_df_long.csv' datatype='table' name='[__tableau_internal_object_id__].[case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5]' role='measure' type='quantitative' />
      <column caption='Collection Date' datatype='date' name='[collection_date]' role='dimension' type='ordinal' />
      <column caption='Resid' datatype='real' name='[resid]' role='measure' type='quantitative' />
      <column caption='Seasonality' datatype='real' name='[seasonal]' role='measure' type='quantitative' />
      <column caption='Set' datatype='string' name='[set]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;avian_na&quot;' value='Avian (North America w/o USA)' />
          <alias key='&quot;avian_usa&quot;' value='Avian (USA)' />
          <alias key='&quot;mammal_global&quot;' value='Mammalian (Global w/o USA)' />
          <alias key='&quot;mammal_na&quot;' value='Mammalian (North America w/o USA)' />
          <alias key='&quot;mammal_usa&quot;' value='Mammalian (USA)' />
          <alias key='&quot;total&quot;' value='Total (All North America)' />
        </aliases>
      </column>
      <column caption='Trend' datatype='real' name='[trend]' role='measure' type='quantitative' />
      <column caption='Weights' datatype='real' name='[weights]' role='measure' type='quantitative' />
      <column-instance column='[set]' derivation='None' name='[none:set:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:set:nk]' type='palette'>
            <map to='#005035'>
              <bucket>&quot;mammal_global&quot;</bucket>
            </map>
            <map to='#005035'>
              <bucket>&quot;mammal_usa&quot;</bucket>
            </map>
            <map to='#717c7d'>
              <bucket>&quot;total&quot;</bucket>
            </map>
            <map to='#72246c'>
              <bucket>&quot;avian_usa&quot;</bucket>
            </map>
            <map to='#899064'>
              <bucket>&quot;mammal_na&quot;</bucket>
            </map>
            <map to='#df4661'>
              <bucket>&quot;avian_na&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='case_decomp_df_long.csv' id='case_decomp_df_long.csv_205AF40E9AFE471B9E524BE541DCA1A5'>
            <properties context=''>
              <relation connection='textscan.1fhaw6q00vyu2q12ofc8q0unnnoi' name='case_decomp_df_long.csv' table='[case_decomp_df_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='collection_date' ordinal='0' />
                  <column datatype='string' name='set' ordinal='1' />
                  <column datatype='real' name='resid' ordinal='2' />
                  <column datatype='real' name='seasonal' ordinal='3' />
                  <column datatype='real' name='trend' ordinal='4' />
                  <column datatype='real' name='weights' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='STL Decomp'>
      <table>
        <view>
          <datasources>
            <datasource caption='case_decomp_df_long' name='federated.1bisj3y0l3i5z018vndb20x1g5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1bisj3y0l3i5z018vndb20x1g5t2'>
            <column caption='Species' datatype='string' name='[Calculation_5383771926535204866]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [set]&#13;&#10;    WHEN &quot;avian_na&quot; THEN &quot;Avian&quot;&#13;&#10;    WHEN &quot;avian_usa&quot; THEN &quot;Avian&quot;&#13;&#10;    WHEN &quot;mammal_na&quot; THEN &quot;Mammalian&quot;&#13;&#10;    WHEN &quot;mammal_usa&quot; THEN &quot;Mammalian&quot;&#13;&#10;    WHEN &quot;total&quot; THEN &quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Location' datatype='string' name='[Species (copy)_5383771926536011779]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [set]&#13;&#10;    WHEN &quot;avian_na&quot; THEN &quot;North America (w/o USA)&quot;&#13;&#10;    WHEN &quot;avian_usa&quot; THEN &quot;USA&quot;&#13;&#10;    WHEN &quot;mammal_na&quot; THEN &quot;North America (w/o USA)&quot;&#13;&#10;    WHEN &quot;mammal_usa&quot; THEN &quot;USA&quot;&#13;&#10;    WHEN &quot;total&quot; THEN &quot;Total&quot;&#13;&#10;END' />
            </column>
            <column caption='Collection Date' datatype='date' name='[collection_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5383771926535204866]' derivation='None' name='[none:Calculation_5383771926535204866:nk]' pivot='key' type='nominal' />
            <column-instance column='[Species (copy)_5383771926536011779]' derivation='None' name='[none:Species (copy)_5383771926536011779:nk]' pivot='key' type='nominal' />
            <column-instance column='[set]' derivation='None' name='[none:set:nk]' pivot='key' type='nominal' />
            <column caption='Resid' datatype='real' name='[resid]' role='measure' type='quantitative' />
            <column caption='Seasonality' datatype='real' name='[seasonal]' role='measure' type='quantitative' />
            <column caption='Set' datatype='string' name='[set]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;avian_na&quot;' value='Avian (North America w/o USA)' />
                <alias key='&quot;avian_usa&quot;' value='Avian (USA)' />
                <alias key='&quot;mammal_global&quot;' value='Mammalian (Global w/o USA)' />
                <alias key='&quot;mammal_na&quot;' value='Mammalian (North America w/o USA)' />
                <alias key='&quot;mammal_usa&quot;' value='Mammalian (USA)' />
                <alias key='&quot;total&quot;' value='Total (All North America)' />
              </aliases>
            </column>
            <column-instance column='[resid]' derivation='Sum' name='[sum:resid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seasonal]' derivation='Sum' name='[sum:seasonal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trend]' derivation='Sum' name='[sum:trend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[collection_date]' derivation='Month-Trunc' name='[tmn:collection_date:qk]' pivot='key' type='quantitative' />
            <column caption='Trend' datatype='real' name='[trend]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Calculation_5383771926535204866:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Avian&quot;</bucket>
              <bucket>&quot;Mammalian&quot;</bucket>
              <bucket>&quot;Both&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;North America (w/o USA)&quot;</bucket>
              <bucket>&quot;USA&quot;</bucket>
              <bucket>&quot;Total&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[tmn:collection_date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]' scope='rows' value='Residual' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' value='on' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='14' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Arial' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:seasonal:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:trend:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:trend:qk] + ([federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:seasonal:qk] + [federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]))</rows>
        <cols>(([federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk] / [federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Calculation_5383771926535204866:nk]) * [federated.1bisj3y0l3i5z018vndb20x1g5t2].[tmn:collection_date:qk])</cols>
      </table>
      <simple-id uuid='{79B53AD8-2EB5-4FC6-8394-4F87F4B967CE}' />
    </worksheet>
    <worksheet name='STL Decomp (US Only)'>
      <table>
        <view>
          <datasources>
            <datasource caption='case_decomp_df_long' name='federated.1bisj3y0l3i5z018vndb20x1g5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1bisj3y0l3i5z018vndb20x1g5t2'>
            <column caption='Species' datatype='string' name='[Calculation_5383771926535204866]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [set]&#13;&#10;    WHEN &quot;avian_na&quot; THEN &quot;Avian&quot;&#13;&#10;    WHEN &quot;avian_usa&quot; THEN &quot;Avian&quot;&#13;&#10;    WHEN &quot;mammal_na&quot; THEN &quot;Mammalian&quot;&#13;&#10;    WHEN &quot;mammal_usa&quot; THEN &quot;Mammalian&quot;&#13;&#10;    WHEN &quot;total&quot; THEN &quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Location' datatype='string' name='[Species (copy)_5383771926536011779]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [set]&#13;&#10;    WHEN &quot;avian_na&quot; THEN &quot;North America (w/o USA)&quot;&#13;&#10;    WHEN &quot;avian_usa&quot; THEN &quot;USA&quot;&#13;&#10;    WHEN &quot;mammal_na&quot; THEN &quot;North America (w/o USA)&quot;&#13;&#10;    WHEN &quot;mammal_usa&quot; THEN &quot;USA&quot;&#13;&#10;    WHEN &quot;total&quot; THEN &quot;Total&quot;&#13;&#10;END' />
            </column>
            <column caption='Collection Date' datatype='date' name='[collection_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5383771926535204866]' derivation='None' name='[none:Calculation_5383771926535204866:nk]' pivot='key' type='nominal' />
            <column-instance column='[Species (copy)_5383771926536011779]' derivation='None' name='[none:Species (copy)_5383771926536011779:nk]' pivot='key' type='nominal' />
            <column-instance column='[set]' derivation='None' name='[none:set:nk]' pivot='key' type='nominal' />
            <column caption='Resid' datatype='real' name='[resid]' role='measure' type='quantitative' />
            <column caption='Seasonality' datatype='real' name='[seasonal]' role='measure' type='quantitative' />
            <column caption='Set' datatype='string' name='[set]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;avian_na&quot;' value='Avian (North America w/o USA)' />
                <alias key='&quot;avian_usa&quot;' value='Avian (USA)' />
                <alias key='&quot;mammal_global&quot;' value='Mammalian (Global w/o USA)' />
                <alias key='&quot;mammal_na&quot;' value='Mammalian (North America w/o USA)' />
                <alias key='&quot;mammal_usa&quot;' value='Mammalian (USA)' />
                <alias key='&quot;total&quot;' value='Total (All North America)' />
              </aliases>
            </column>
            <column-instance column='[resid]' derivation='Sum' name='[sum:resid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seasonal]' derivation='Sum' name='[sum:seasonal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trend]' derivation='Sum' name='[sum:trend:qk]' pivot='key' type='quantitative' />
            <column-instance column='[collection_date]' derivation='Month-Trunc' name='[tmn:collection_date:qk]' pivot='key' type='quantitative' />
            <column caption='Trend' datatype='real' name='[trend]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Calculation_5383771926535204866:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Avian&quot;</bucket>
              <bucket>&quot;Mammalian&quot;</bucket>
              <bucket>&quot;Both&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;North America (w/o USA)&quot;</bucket>
              <bucket>&quot;USA&quot;</bucket>
              <bucket>&quot;Total&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:set:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:set:nk]' member='&quot;avian_na&quot;' />
                <groupfilter function='member' level='[none:set:nk]' member='&quot;mammal_na&quot;' />
                <groupfilter function='member' level='[none:set:nk]' member='&quot;total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]</column>
            <column>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[tmn:collection_date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]' scope='rows' value='Residual' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' value='on' />
            <format attr='display' field='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='14' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Arial' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:seasonal:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:trend:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:trend:qk] + ([federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:seasonal:qk] + [federated.1bisj3y0l3i5z018vndb20x1g5t2].[sum:resid:qk]))</rows>
        <cols>(([federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk] / [federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Calculation_5383771926535204866:nk]) * [federated.1bisj3y0l3i5z018vndb20x1g5t2].[tmn:collection_date:qk])</cols>
      </table>
      <simple-id uuid='{417857C5-2F8E-4914-8551-6557FD1166AD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard (Full)'>
      <style />
      <size maxheight='1000' maxwidth='1500' minheight='1000' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='7' param='horz' type-v2='layout-flow' w='98934' x='533' y='800'>
            <zone h='98400' id='5' type-v2='layout-basic' w='98934' x='533' y='800'>
              <zone h='98400' id='3' name='STL Decomp' show-title='false' w='98934' x='533' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='14' param='vert' type-v2='layout-flow' w='98934' x='533' y='800'>
                <zone fixed-size='280' h='98400' id='3' is-fixed='true' name='STL Decomp' show-title='false' w='98934' x='533' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4C32A675-C10D-45C7-8717-6B3A8E3FFFF2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard (USA only)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='STL Decomp (US Only)' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='STL Decomp (US Only)' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BCE95B3E-4D22-460C-84B0-59129EBBBE34}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='STL Decomp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[:Measure Names]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Calculation_5383771926535204866:nk]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[yr:collection_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD07EA50-0ED3-4EFE-955F-A55A31D25ACA}' />
    </window>
    <window class='worksheet' name='STL Decomp (US Only)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[:Measure Names]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Calculation_5383771926535204866:nk]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:Species (copy)_5383771926536011779:nk]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]</field>
            <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[yr:collection_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B72CB10F-7282-488A-A0D0-6C1AD0553CD0}' />
    </window>
    <window class='dashboard' name='Dashboard (Full)'>
      <viewpoints>
        <viewpoint name='STL Decomp'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FFAA409F-1A9A-4B44-A534-917BE616F49C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard (USA only)'>
      <viewpoints>
        <viewpoint name='STL Decomp (US Only)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1bisj3y0l3i5z018vndb20x1g5t2].[none:set:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BD636946-1070-42AA-A39E-C1CB3787BD93}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard (Full)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard (USA only)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='STL Decomp' width='192'>
      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
      kQKQpDX/H8S9rdRZNQ5hAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='STL Decomp (US Only)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
